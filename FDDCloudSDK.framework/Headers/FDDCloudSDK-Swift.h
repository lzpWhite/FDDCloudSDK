// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FDDCloudSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

enum FDDServerType : NSInteger;
@class UIViewController;
enum FDDCloudShareType : NSInteger;
@class FDDCloudShareDataEntity;

SWIFT_CLASS("_TtC11FDDCloudSDK15FDDCloudManager")
@interface FDDCloudManager : NSObject
/// \param userId fddUserID
///
/// \param userId fddUserId
/// 登录成功或者有FDD用户ID时候设置
///
+ (void)setFddUserIdWithUserId:(NSInteger)userId;
/// 初始化注册SDK
/// \param key key
///
+ (void)registKeyWithKey:(NSString * _Nonnull)key;
/// 设置SDK环境 默认正式环境
/// \param serverType .
/// 生成环境 production = 0
/// 予发布 staging = 1
/// 测试  test = 2
///
+ (void)setServerTypeWithServerType:(enum FDDServerType)serverType;
/// 通过url获取vc
/// \param url 目标链接
///
///
/// returns:
/// vc
+ (UIViewController * _Nullable)getVCWith:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
/// 获取跳转的页面
/// \param action 页面路由名字
///
/// \param paths 路径中的参数,key=value形式。 eg. /house/detail/{houseId} .[“houseId”: “123”]
///
/// \param query 路径后面的参数,key=value形式。 eg. /house/detail/123?query=ass [“query”: “ass”]
///
///
/// returns:
/// 返回对应的VC，未获取到path时候为空
+ (UIViewController * _Nullable)getActionVCWithAction:(NSString * _Nonnull)action paths:(NSDictionary<NSString *, NSString *> * _Nullable)paths query:(NSDictionary<NSString *, NSString *> * _Nullable)query SWIFT_WARN_UNUSED_RESULT;
/// 退出登录清理数据
+ (void)logOut;
/// 分享实现
/// \param block 分享block 第一个参数为分享类型  第二个参数为分享数据源
///
+ (void)shareEventBlockWithBlock:(void (^ _Nonnull)(enum FDDCloudShareType, FDDCloudShareDataEntity * _Nullable))block;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11FDDCloudSDK23FDDCloudShareDataEntity")
@interface FDDCloudShareDataEntity : NSObject
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable hlink;
@property (nonatomic, copy) NSString * _Nullable hlinkTimelineTitle;
@property (nonatomic) id _Nullable hlinkPicUrl;
@property (nonatomic, copy) NSString * _Nullable hlinkWechatTitle;
@property (nonatomic, copy) NSString * _Nullable hlinkWechatSummary;
@property (nonatomic, copy) NSString * _Nullable wxTitle;
@property (nonatomic, copy) NSString * _Nullable wxAppId;
@property (nonatomic, copy) NSString * _Nullable wxAppPath;
@property (nonatomic) id _Nullable wxPicUrl;
@property (nonatomic, copy) NSString * _Nullable qrcode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 分享类型
typedef SWIFT_ENUM(NSInteger, FDDCloudShareType, closed) {
/// 空
  FDDCloudShareTypeNone = 0,
/// 分享朋友只有图片
  FDDCloudShareTypeWechatSessionImage = 13,
/// 分享小程序
  FDDCloudShareTypeWechatMiniProgram = 12,
/// 分享朋友
  FDDCloudShareTypeWechatSession = 11,
/// 分享朋友圈
  FDDCloudShareTypeWechatTimeLine = 21,
/// 分享朋友圈只有图片
  FDDCloudShareTypeWechatTimeLineOnleImage = 23,
/// 复制链接
  FDDCloudShareTypeCopy = 41,
/// 短信
  FDDCloudShareTypeSms = 31,
};

typedef SWIFT_ENUM(NSInteger, FDDServerType, closed) {
/// 生成环境
  FDDServerTypeProduction = 0,
/// 予发布
  FDDServerTypeStaging = 1,
/// 测试
  FDDServerTypeTest = 2,
};










@interface UIWindow (SWIFT_EXTENSION(FDDCloudSDK))
+ (UIWindow * _Nonnull)defaultNormalLevel SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
